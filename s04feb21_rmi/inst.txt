Step 1: Defining the remote interface

The first thing to do is to create an interface that will provide the description of the methods that can be invoked by remote clients. This interface should extend the Remote interface and the method prototype within the interface should throw the RemoteException.

Step 2: Implementing the remote interface
The next step is to implement the remote interface. To implement the remote interface, the class should extend to UnicastRemoteObject class of java.rmi package. Also, a default constructor needs to be created to throw the java.rmi.RemoteException from its parent constructor in class.

Step 3: Creating Stub and Skeleton objects from the implementation class using rmic 
The rmic tool is used to invoke the rmi compiler that creates the Stub and Skeleton objects. Its prototype is rmic classname. For above program the following command need to be executed at the command prompt 
rmic SearchQuery.

Step 4: Start the rmiregistry 
Start the registry service by issuing the following command at the command prompt start rmiregistry

Step 5: Create and execute the server application program 
The next step is to create the server application program and execute it on a separate command prompt.
The server program uses createRegistry method of LocateRegistry class to create rmiregistry within the server JVM with the port number passed as an argument.
The rebind method of Naming class is used to bind the remote object to the new name.

Step 6: Create and execute the client application program 
The last step is to create the client application program and execute it on a separate command prompt . The lookup method of the Naming class is used to get the reference of the Stub object.

Note: The above client and server program is executed on the same machine so localhost is used. In order to access the remote object from another machine, localhost is to be replaced with the IP address where the remote object is present.

save the files respectively as per class name as

Search.java , SearchQuery.java , SearchServer.java & ClientRequest.java
Important Observations:

RMI is a pure java solution to Remote Procedure Calls (RPC) and is used to create the distributed applications in java.
Stub and Skeleton objects are used for communication between the client and server-side.
